// <auto-generated />
using System;
using ERP_C.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ERP_C.Migrations
{
    [DbContext(typeof(BDContext))]
    [Migration("20231101233042_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ERP_C.Models.CentroDeCosto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GerencaId")
                        .HasColumnType("int");

                    b.Property<double>("MontoMaximo")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("GerencaId")
                        .IsUnique();

                    b.ToTable("CentroDeCostos");
                });

            modelBuilder.Entity("ERP_C.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailContacto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("FotoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Rubro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TelefonoId")
                        .HasColumnType("int");

                    b.Property<string>("ion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("FotoId");

                    b.HasIndex("TelefonoId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("ERP_C.Models.Foto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Fotos");
                });

            modelBuilder.Entity("ERP_C.Models.Gasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CentroDeCostoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("EmpleadoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CentroDeCostoId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Gastos");
                });

            modelBuilder.Entity("ERP_C.Models.Gerencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<bool>("EsGerenciaGeneral")
                        .HasColumnType("bit");

                    b.Property<int?>("GerenciaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("ResponsableId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("GerenciaId");

                    b.HasIndex("ResponsableId");

                    b.ToTable("Gerencias");
                });

            modelBuilder.Entity("ERP_C.Models.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ERP_C.Models.Posicion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int>("GerenciaId")
                        .HasColumnType("int");

                    b.Property<int?>("JefeId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Sueldo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId")
                        .IsUnique()
                        .HasFilter("[EmpleadoId] IS NOT NULL");

                    b.HasIndex("GerenciaId");

                    b.HasIndex("JefeId");

                    b.ToTable("Posiciones");
                });

            modelBuilder.Entity("ERP_C.Models.Telefono", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int>("TipoTelefonoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId")
                        .IsUnique();

                    b.HasIndex("TipoTelefonoId")
                        .IsUnique();

                    b.ToTable("Telefonos");
                });

            modelBuilder.Entity("ERP_C.Models.TipoTelefono", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoTelefonos");
                });

            modelBuilder.Entity("ERP_C.Models.Empleado", b =>
                {
                    b.HasBaseType("ERP_C.Models.Persona");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("FotoId")
                        .HasColumnType("int");

                    b.Property<int>("Legajo")
                        .HasColumnType("int");

                    b.Property<int>("ObrasocialEmpleado")
                        .HasColumnType("int");

                    b.HasIndex("FotoId");

                    b.HasDiscriminator().HasValue("Empleado");
                });

            modelBuilder.Entity("ERP_C.Models.CentroDeCosto", b =>
                {
                    b.HasOne("ERP_C.Models.Gerencia", "Gerencia")
                        .WithOne("CentroDeCosto")
                        .HasForeignKey("ERP_C.Models.CentroDeCosto", "GerencaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gerencia");
                });

            modelBuilder.Entity("ERP_C.Models.Empresa", b =>
                {
                    b.HasOne("ERP_C.Models.Foto", "Foto")
                        .WithMany()
                        .HasForeignKey("FotoId");

                    b.HasOne("ERP_C.Models.Telefono", "Telefono")
                        .WithMany()
                        .HasForeignKey("TelefonoId");

                    b.Navigation("Foto");

                    b.Navigation("Telefono");
                });

            modelBuilder.Entity("ERP_C.Models.Gasto", b =>
                {
                    b.HasOne("ERP_C.Models.CentroDeCosto", "CentroDeCosto")
                        .WithMany("Gastos")
                        .HasForeignKey("CentroDeCostoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP_C.Models.Empleado", "Empleado")
                        .WithMany("Gastos")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CentroDeCosto");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("ERP_C.Models.Gerencia", b =>
                {
                    b.HasOne("ERP_C.Models.Empresa", "Empresa")
                        .WithMany("Gerencias")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP_C.Models.Gerencia", "GerenciaSuperior")
                        .WithMany("SubGerencias")
                        .HasForeignKey("GerenciaId");

                    b.HasOne("ERP_C.Models.Posicion", "Responsable")
                        .WithMany()
                        .HasForeignKey("ResponsableId");

                    b.Navigation("Empresa");

                    b.Navigation("GerenciaSuperior");

                    b.Navigation("Responsable");
                });

            modelBuilder.Entity("ERP_C.Models.Posicion", b =>
                {
                    b.HasOne("ERP_C.Models.Empleado", "Empleado")
                        .WithOne("Posicion")
                        .HasForeignKey("ERP_C.Models.Posicion", "EmpleadoId");

                    b.HasOne("ERP_C.Models.Gerencia", "Gerencia")
                        .WithMany("Posiciones")
                        .HasForeignKey("GerenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP_C.Models.Posicion", "Jefe")
                        .WithMany("Empleados")
                        .HasForeignKey("JefeId");

                    b.Navigation("Empleado");

                    b.Navigation("Gerencia");

                    b.Navigation("Jefe");
                });

            modelBuilder.Entity("ERP_C.Models.Telefono", b =>
                {
                    b.HasOne("ERP_C.Models.Empleado", null)
                        .WithOne("Telefono")
                        .HasForeignKey("ERP_C.Models.Telefono", "EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP_C.Models.TipoTelefono", "TipoTelefono")
                        .WithOne("Telefono")
                        .HasForeignKey("ERP_C.Models.Telefono", "TipoTelefonoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoTelefono");
                });

            modelBuilder.Entity("ERP_C.Models.Empleado", b =>
                {
                    b.HasOne("ERP_C.Models.Foto", "Foto")
                        .WithMany()
                        .HasForeignKey("FotoId");

                    b.Navigation("Foto");
                });

            modelBuilder.Entity("ERP_C.Models.CentroDeCosto", b =>
                {
                    b.Navigation("Gastos");
                });

            modelBuilder.Entity("ERP_C.Models.Empresa", b =>
                {
                    b.Navigation("Gerencias");
                });

            modelBuilder.Entity("ERP_C.Models.Gerencia", b =>
                {
                    b.Navigation("CentroDeCosto");

                    b.Navigation("Posiciones");

                    b.Navigation("SubGerencias");
                });

            modelBuilder.Entity("ERP_C.Models.Posicion", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("ERP_C.Models.TipoTelefono", b =>
                {
                    b.Navigation("Telefono");
                });

            modelBuilder.Entity("ERP_C.Models.Empleado", b =>
                {
                    b.Navigation("Gastos");

                    b.Navigation("Posicion");

                    b.Navigation("Telefono");
                });
#pragma warning restore 612, 618
        }
    }
}
